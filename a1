Starting parse
Entering state 0
Stack now 0
Reducing stack by rule 3 (line 172):
-> $$ = nterm stmt_series ()
Entering state 2
Stack now 0 2
Reading a token
Next token is token WHILE ()
Shifting token WHILE ()
Entering state 12
Stack now 0 2 12
Reducing stack by rule 101 (line 647):
   $1 = token WHILE ()
-> $$ = nterm whilestart ()
Entering state 43
Stack now 0 2 43
Reading a token
Next token is token '(' ()
Shifting token '(' ()
Entering state 98
Stack now 0 2 43 98
Reading a token
Next token is token IDENTIFIER ()
Shifting token IDENTIFIER ()
Entering state 10
Stack now 0 2 43 98 10
Reducing stack by rule 45 (line 435):
   $1 = token IDENTIFIER ()
-> $$ = nterm lvalue ()
Entering state 33
Stack now 0 2 43 98 33
Reading a token
Next token is token OR ()
Reducing stack by rule 40 (line 419):
   $1 = nterm lvalue ()
-> $$ = nterm primary ()
Entering state 32
Stack now 0 2 43 98 32
Reducing stack by rule 38 (line 397):
   $1 = nterm primary ()
-> $$ = nterm term ()
Entering state 30
Stack now 0 2 43 98 30
Reducing stack by rule 28 (line 320):
   $1 = nterm term ()
-> $$ = nterm expr ()
Entering state 140
Stack now 0 2 43 98 140
Next token is token OR ()
Shifting token OR ()
Entering state 71
Stack now 0 2 43 98 140 71
Reducing stack by rule 29 (line 325):
-> $$ = nterm M ()
Entering state 118
Stack now 0 2 43 98 140 71 118
Reading a token
Next token is token IDENTIFIER ()
Shifting token IDENTIFIER ()
Entering state 10
Stack now 0 2 43 98 140 71 118 10
Reducing stack by rule 45 (line 435):
   $1 = token IDENTIFIER ()
-> $$ = nterm lvalue ()
Entering state 33
Stack now 0 2 43 98 140 71 118 33
Reading a token
Next token is token AND ()
Reducing stack by rule 40 (line 419):
   $1 = nterm lvalue ()
-> $$ = nterm primary ()
Entering state 32
Stack now 0 2 43 98 140 71 118 32
Reducing stack by rule 38 (line 397):
   $1 = nterm primary ()
-> $$ = nterm term ()
Entering state 30
Stack now 0 2 43 98 140 71 118 30
Reducing stack by rule 28 (line 320):
   $1 = nterm term ()
-> $$ = nterm expr ()
Entering state 153
Stack now 0 2 43 98 140 71 118 153
Next token is token AND ()
Shifting token AND ()
Entering state 70
Stack now 0 2 43 98 140 71 118 153 70
Reducing stack by rule 29 (line 325):
-> $$ = nterm M ()
Entering state 117
Stack now 0 2 43 98 140 71 118 153 70 117
Reading a token
Next token is token IDENTIFIER ()
Shifting token IDENTIFIER ()
Entering state 10
Stack now 0 2 43 98 140 71 118 153 70 117 10
Reducing stack by rule 45 (line 435):
   $1 = token IDENTIFIER ()
-> $$ = nterm lvalue ()
Entering state 33
Stack now 0 2 43 98 140 71 118 153 70 117 33
Reading a token
Next token is token ')' ()
Reducing stack by rule 40 (line 419):
   $1 = nterm lvalue ()
-> $$ = nterm primary ()
Entering state 32
Stack now 0 2 43 98 140 71 118 153 70 117 32
Reducing stack by rule 38 (line 397):
   $1 = nterm primary ()
-> $$ = nterm term ()
Entering state 30
Stack now 0 2 43 98 140 71 118 153 70 117 30
Reducing stack by rule 28 (line 320):
   $1 = nterm term ()
-> $$ = nterm expr ()
Entering state 152
Stack now 0 2 43 98 140 71 118 153 70 117 152
Next token is token ')' ()
Reducing stack by rule 26 (line 290):
   $1 = nterm expr ()
   $2 = token AND ()
   $3 = nterm M ()
   $4 = nterm expr ()
-> $$ = nterm expr ()
Entering state 153
Stack now 0 2 43 98 140 71 118 153
Next token is token ')' ()
Reducing stack by rule 27 (line 305):
   $1 = nterm expr ()
   $2 = token OR ()
   $3 = nterm M ()
   $4 = nterm expr ()
-> $$ = nterm expr ()
Entering state 140
Stack now 0 2 43 98 140
Next token is token ')' ()
Shifting token ')' ()
Entering state 160
Stack now 0 2 43 98 140 160
Reducing stack by rule 102 (line 651):
   $1 = token '(' ()
   $2 = nterm expr ()
   $3 = token ')' ()
-> $$ = nterm whilecond ()
Entering state 99
Stack now 0 2 43 99
Reducing stack by rule 97 (line 634):
-> $$ = nterm loopstart ()
Entering state 141
Stack now 0 2 43 99 141
Reading a token
Next token is token IDENTIFIER ()
Shifting token IDENTIFIER ()
Entering state 10
Stack now 0 2 43 99 141 10
Reducing stack by rule 45 (line 435):
   $1 = token IDENTIFIER ()
-> $$ = nterm lvalue ()
Entering state 33
Stack now 0 2 43 99 141 33
Reading a token
Next token is token '(' ()
Shifting token '(' ()
Entering state 90
Stack now 0 2 43 99 141 33 90
Reading a token
Next token is token MY_STRING ()
Shifting token MY_STRING ()
Entering state 6
Stack now 0 2 43 99 141 33 90 6
Reducing stack by rule 83 (line 597):
   $1 = token MY_STRING ()
-> $$ = nterm const ()
Entering state 39
Stack now 0 2 43 99 141 33 90 39
Reducing stack by rule 44 (line 430):
   $1 = nterm const ()
-> $$ = nterm primary ()
Entering state 32
Stack now 0 2 43 99 141 33 90 32
Reducing stack by rule 38 (line 397):
   $1 = nterm primary ()
-> $$ = nterm term ()
Entering state 30
Stack now 0 2 43 99 141 33 90 30
Reducing stack by rule 28 (line 320):
   $1 = nterm term ()
-> $$ = nterm expr ()
Entering state 63
Stack now 0 2 43 99 141 33 90 63
Reading a token
Next token is token ')' ()
Reducing stack by rule 63 (line 524):
-> $$ = nterm elist_alt ()
Entering state 109
Stack now 0 2 43 99 141 33 90 63 109
Reducing stack by rule 60 (line 511):
   $1 = nterm expr ()
   $2 = nterm elist_alt ()
-> $$ = nterm elist ()
Entering state 134
Stack now 0 2 43 99 141 33 90 134
Next token is token ')' ()
Shifting token ')' ()
Entering state 156
Stack now 0 2 43 99 141 33 90 134 156
Reducing stack by rule 58 (line 496):
   $1 = token '(' ()
   $2 = nterm elist ()
   $3 = token ')' ()
-> $$ = nterm normcall ()
Entering state 92
Stack now 0 2 43 99 141 33 92
Reducing stack by rule 56 (line 488):
   $1 = nterm normcall ()
-> $$ = nterm callsuffix ()
Entering state 91
Stack now 0 2 43 99 141 33 91
Reducing stack by rule 54 (line 474):
   $1 = nterm lvalue ()
   $2 = nterm callsuffix ()
-> $$ = nterm call ()
Entering state 35
Stack now 0 2 43 99 141 35
Reading a token
Next token is token ';' ()
Reducing stack by rule 41 (line 420):
   $1 = nterm call ()
-> $$ = nterm primary ()
Entering state 32
Stack now 0 2 43 99 141 32
Reducing stack by rule 38 (line 397):
   $1 = nterm primary ()
-> $$ = nterm term ()
Entering state 30
Stack now 0 2 43 99 141 30
Reducing stack by rule 28 (line 320):
   $1 = nterm term ()
-> $$ = nterm expr ()
Entering state 29
Stack now 0 2 43 99 141 29
Next token is token ';' ()
Shifting token ';' ()
Entering state 83
Stack now 0 2 43 99 141 29 83
Reducing stack by rule 4 (line 175):
   $1 = nterm expr ()
   $2 = token ';' ()
-> $$ = nterm stmt ()
Entering state 161
Stack now 0 2 43 99 141 161
Reducing stack by rule 99 (line 637):
-> $$ = nterm $@7 ()
Entering state 171
Stack now 0 2 43 99 141 161 171
Reducing stack by rule 98 (line 635):
-> $$ = nterm loopend ()
Entering state 179
Stack now 0 2 43 99 141 161 171 179
Reducing stack by rule 100 (line 637):
   $1 = nterm whilestart ()
   $2 = nterm whilecond ()
   $3 = nterm loopstart ()
   $4 = nterm stmt ()
   $5 = nterm $@7 ()
   $6 = nterm loopend ()
-> $$ = nterm whilestmt ()
Entering state 42
Stack now 0 2 42
Reducing stack by rule 6 (line 183):
   $1 = nterm whilestmt ()
-> $$ = nterm stmt ()
Entering state 28
Stack now 0 2 28
Reducing stack by rule 2 (line 162):
   $1 = nterm stmt_series ()
   $2 = nterm stmt ()
-> $$ = nterm stmt_series ()
Entering state 2
Stack now 0 2
Reading a token
Now at end of input.
Reducing stack by rule 1 (line 160):
   $1 = nterm stmt_series ()
-> $$ = nterm program ()
Entering state 1
Stack now 0 1
Now at end of input.
Shifting token end of file ()
Entering state 3
Stack now 0 1 3
Stack now 0 1 3
Cleanup: popping token end of file ()
Cleanup: popping nterm program ()
